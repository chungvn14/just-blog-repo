@model IEnumerable<FA.JustBlog.Core.Models.Post>


@{
    ViewData["Title"] = "Manage Posts";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col">
            <h1 class="mb-4 text-primary">Manage Posts</h1>

            <div class="d-flex justify-content-between align-items-center mb-4">
                <a asp-action="Create" class="btn btn-success btn-lg">
                    <i class="fas fa-plus"></i> Create New
                </a>
                <div class="input-group w-50">
                    
                    <input type="search" id="searchBox" class="form-control" placeholder="Search here..." aria-label="Search" aria-describedby="search-addon">
                </div>

                <form method="get" class="form-inline">
                    <select name="filter" class="form-control form-control-lg" onchange="this.form.submit()">
                        @if (ViewBag.Filters != null)
                        {
                            foreach (var filter in (List<SelectListItem>)ViewBag.Filters)
                            {
                                if (filter.Selected)
                                {
                                    <option value="@filter.Value" selected="selected">@filter.Text</option>
                                }
                                else
                                {
                                    <option value="@filter.Value">@filter.Text</option>
                                }
                            }
                        }
                    </select>
                </form>
            </div>

            <div class="table-responsive">
                <div class="table-container">
                    <table class="table table-hover table-bordered text-center align-middle myTable">
                        <thead class="">
                            <tr>
                                <th class="fixed-column">#</th>
                                <th>@Html.DisplayNameFor(model => model.Title)</th>
                                <th>@Html.DisplayNameFor(model => model.ShortDescription)</th>
                                <th>@Html.DisplayNameFor(model => model.UrlSlug)</th>
                                <th>@Html.DisplayNameFor(model => model.Published)</th>
                                <th>@Html.DisplayNameFor(model => model.PostedOn)</th>
                                <th>@Html.DisplayNameFor(model => model.Modified)</th>
                                <th>@Html.DisplayNameFor(model => model.Category)</th>
                                <th>@Html.DisplayNameFor(model => model.ViewCount)</th>
                                <th>Rate Count</th> <!-- Changed here to a static header -->
                                <th>@Html.DisplayNameFor(model => model.TotalRate)</th>
                                <th class="actions-column">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Count(); i++)
                            {
                                var item = Model.ElementAt(i);
                                <tr>
                                    <td class="fixed-column">@(@i + 1)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ShortDescription)</td>
                                    <td>@Html.DisplayFor(modelItem => item.UrlSlug)</td>
                                    <td>
                                        @if (item.Published)
                                        {
                                            <span class="badge badge-success">Published</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-danger">Unpublished</span>
                                        }
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.PostedOn)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Modified)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ViewCount)</td>
                                    <td>@item.RateCount</td> <!-- Accessing RateCount on the individual post -->
                                    <td>@Html.DisplayFor(modelItem => item.TotalRate)</td>
                                    <td class="actions-column">
                                        <div class="btn-group" role="group">
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (User.IsInRole("BlogOwner"))
                                            {
                                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

           
        </div>
    </div>
</div>

<style>
    .container-fluid {
        padding: 20px;
    }

    .fixed-column {
        position: sticky;
        left: 0;
        background-color: #f8f9fa;
        z-index: 10;
    }

    .actions-column {
        position: sticky;
        right: 0;
        background-color: #f8f9fa;
        z-index: 10;
    }

    .table-container {
        overflow-x: auto;
    }

    .btn-group .btn {
        margin: 0 2px;
    }

    .table th, .table td {
        vertical-align: middle;
    }

    .badge {
        font-size: 14px;
        padding: 5px 10px;
    }

    .thead-dark th {
        background-color: #343a40;
        color: #fff;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
    }
</style>
@section scripts {
    <script>
        $(document).ready(function () {
            let options = {
                numberPerPage: 5, // Số lượng dữ liệu trên mỗi trang
                goBar: true, // Thanh nhập số trang
                pageCounter: true // Hiển thị số trang
            };

            let filterOptions = {
                el: '#searchBox' // Input box để tìm kiếm
            };

            paginate.init('.myTable', options, filterOptions);
        });
    </script>
}